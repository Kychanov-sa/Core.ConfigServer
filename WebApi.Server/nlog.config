<?xml version="1.0" encoding="utf-8" ?>
<nlog xmlns="http://www.nlog-project.org/schemas/NLog.xsd"
      xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
      autoReload="true"
      internalLogLevel="Info"
      internalLogFile="Logs/ConfigService.Logger.log">

  <!-- Включение рендера asp.net -->
  <extensions>
    <add assembly="NLog.Web.AspNetCore"/>
    <add assembly="NLog.Targets.ElasticSearch"/>
  </extensions>

  <!-- Файлы-цели для записи -->
  <targets>
    <!-- Все события  -->
    <target xsi:type="File" name="log-text-file" fileName="Logs/${hostname}.ConfigService.All.${shortdate:universalTime=true}.log"
            layout="${longdate:universalTime=true}${literal:text=\t}${uppercase:${level}}${literal:text=\t}${logger}${literal:text=\t}${message}${literal:text=\t}${exception:format=Message,StackTrace:maxInnerExceptionLevel=1:separator=|}${literal:text=\t}${processid}${literal:text=\t}${threadid}${literal:text=\t}${aspnet-user-identity}${literal:text=\t}${aspnet-user-claim:ClaimTypes.Role}${literal:text=\t}${mdlc:item=RequestId}${literal:text=\t}${aspnet-item:variable=ot-HttpRequestIn:objectpath=Span.Context.TraceId}${literal:text=\t}${aspnet-item:variable=TenantId:when='${aspnet-item:variable=TenantId}'!='':cached=true}${literal:text=\t}${hostname:cached=true}${literal:text=\t}${environment:variable=DOCKER_NODE_ID:cached=true}${literal:text=\t}${var:name=ServiceName:when='${var:name=ServiceName}'!='':cached=true}${literal:text=\t}${assembly-version:cached=true}" />
    <target xsi:type="ColoredConsole" name="log-colored-console"
            layout="${time:universalTime=true}${literal:text=\t}${level:uppercase=true}${literal:text=\t}${logger}${when:when='${message}'!='':inner=${newline}${message:trimWhiteSpace=true}}${when:when='${aspnet-user-identity}'!='':inner=${newline}${aspnet-user-identity}}${when:when='${aspnet-user-claim:ClaimTypes.Role}'!='':inner=${newline}${aspnet-user-claim:ClaimTypes.Role}}${when:when='${exception}'!='':inner=${newline}${exception:format=Message,StackTrace:maxInnerExceptionLevel=1:separator=|}}" >
      <highlight-row condition="level == LogLevel.Warn" foregroundColor="Yellow"/>
      <highlight-row condition="level == LogLevel.Error" foregroundColor="Red"/>
      <highlight-row condition="level == LogLevel.Fatal" foregroundColor="Yellow" backgroundColor="Red"/>
    </target>
    <target xsi:type="File" name="log-json-file" fileName="" >
      <layout xsi:type="JsonLayout" suppressSpaces="true" renderEmptyObject="false">
        <attribute name="t" layout="${longdate:universalTime=true}" />
        <attribute name="l" layout="${uppercase:${level}}" />
        <attribute name="lg" layout="${logger}" />
        <attribute name="mt" layout="${message:trimWhiteSpace=true}"/>
        <attribute name="ex" layout="${exception:format=@Type,Message,StackTrace:maxInnerExceptionLevel=1}"/>
        <attribute name="pid" layout="${processid}+${threadid}" />
        <attribute name="un" layout="${aspnet-user-identity}" />
        <attribute name="ur" layout="${aspnet-user-claim:ClaimTypes.Role}" />
        <attribute name="tr" layout="${aspnet-item:variable=ot-HttpRequestIn:objectpath=Span.Context.TraceId}-${mdlc:item=RequestId}" />
        <attribute name="tn" layout="${aspnet-item:variable=TenantId:when='${aspnet-item:variable=TenantId}'!='':cached=true}" />
        <attribute name="h" layout="${hostname:cached=true}" />
        <attribute name="n" layout="${environment:variable=DOCKER_NODE_ID:cached=true}" />
        <attribute name="s" layout="${var:name=ServiceName:when='${var:name=ServiceName}'!='':cached=true}" />
        <attribute name="v" layout="${assembly-version:cached=true}" />
      </layout>
    </target>
    <target xsi:type="ElasticSearch" name="log-elastic-search" includeDefaultFields="false" >
      <field name="@timestamp" layout="${date:universalTime=true:format=yyyy-MM-ddTHH\:mm\:ss.fff}"/>
      <field name="level" layout="${uppercase:${level}}" />
      <field name="source" layout="${logger}" />
      <field name="message" layout="${message:trimWhiteSpace=true}" />
      <field name="stack" layout="${exception:format=Message,StackTrace:maxInnerExceptionLevel=1:separator=|}" />
      <field name="processId" layout="${processid}" />
      <field name="threadId" layout="${threadid}" />
      <field name="userName" layout="${aspnet-user-identity}" />
      <field name="userRole" layout="${aspnet-user-claim:ClaimTypes.Role}" />
      <field name="requestId" layout="${mdlc:item=RequestId}" />
      <field name="traceId" layout="${aspnet-item:variable=ot-HttpRequestIn:objectpath=Span.Context.TraceId}" />
      <field name="tenantId" layout="${aspnet-item:variable=TenantId:when='${aspnet-item:variable=TenantId}'!='':cached=true}" />
      <field name="hostName" layout="${hostname:cached=true}" />
      <field name="dockerNode" layout="${environment:variable=DOCKER_NODE_ID:cached=true}" />
      <field name="serviceName" layout="${var:name=ServiceName:when='${var:name=ServiceName}'!='':cached=true}" />
      <field name="serviceVersion" layout="${assembly-version:cached=true}" />
    </target>
    <!-- Трассировка запросов -->
    <target xsi:type="File" name="request-trace-file" fileName="Logs/${hostname}.ConfigService.Trace.${shortdate:universalTime=true}.log"
            layout="${longdate:universalTime=true}|${message}|${event-properties:item=activity}|${event-properties:item=id}|${event-properties:item=method}|${event-properties:item=url}" />
    <!-- Журнал аудита -->
    <target xsi:type="File" name="audit-events" networkWrites="true" fileName="Logs/${hostname}.ConfigService.Audit.${shortdate:universalTime=true}.json">
      <layout xsi:type="JsonLayout" suppressSpaces="true" renderEmptyObject="false">
        <attribute name="timestamp" layout="${longdate:universalTime=true}" />
        <attribute name="event" layout="${message}" encode="false" escapeUnicode="false" />
      </layout>
    </target>
  </targets>

  <!-- Правила -->
  <rules>
    <!-- Пропуск некритических журналов Microsoft -->
    <logger name="Microsoft.*" maxlevel="Info" final="true" />
    <!-- Пропуск некритических журналов System -->
    <logger name="System.*" maxlevel="Info" final="true" />
    <!-- Пропуск логирования исключений, т.к. логируем их вручную. -->
    <logger name="Microsoft.AspNetCore.Diagnostics.ExceptionHandlerMiddleware" final="true" />
    <!-- Все события -->
    <logger ruleName="all" name="*" minlevel="Info" >
      <filters defaultAction='Log'>
        <when condition="logger == 'Audit.WebApi.AuditEventWebApi'" action="Ignore" />
      </filters>
    </logger>
    <!-- Трассировка запросов -->
    <logger name="*" levels="Trace" writeTo="request-trace-file" />
    <!-- Аудит -->
    <logger name="Audit.WebApi.*" minlevel="Info" writeTo="audit-events" />
  </rules>
</nlog>
